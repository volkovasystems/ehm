{"version":3,"sources":["meta.support.js"],"names":["harden","require","sxty4","NAME","ENTITY","TYPE","OBJECT","BOOLEAN","STRING","NUMBER","VALUE","GARBAGE","CORRUPTED","TAGGED","CLASS_NAME_PATTERN","FLOAT_NUMBER_PATTERN","SYMBOL_PATTERN","TAG_PATTERN","DEFAULT_DATA_URL_PREFIX","Meta","instance","instanceOf","blueprint","constructor","name","__initialize__","entity","state","arguments","length","undefined","data","test","stringify","push","index","status","parser","parameter","concat","splice","filter","token","match","type","value","replace","decode","toLowerCase","method","Function","Error","error","stack","Infinity","NaN","parseFloat","parseInt","JSON","parse","defer","create","toUpperCase","toString","toNumber","toBoolean","typeOf","procedure","deserialize","self","encode","tag","isTagged","Object","prototype","call","module","exports"],"mappings":"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","file":"meta.support.js","sourcesContent":["\"use strict\";\n\n/*;\n\t@submodule-license:\n\t\tThe MIT License (MIT)\n\t\t@mit-license\n\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\n\t\t@email: richeve.bebedor@gmail.com\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.\n\t@end-submodule-license\n\n\t@submodule-configuration:\n\t\t{\n\t\t\t\"package\": \"ehm\",\n\t\t\t\"path\": \"ehm/meta.module.js\",\n\t\t\t\"file\": \"meta.module.js\",\n\t\t\t\"module\": \"ehm\",\n\t\t\t\"author\": \"Richeve S. Bebedor\",\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\n\t\t\t\"repository\": \"https://github.com/volkovasystems/ehm.git\",\n\t\t\t\"test\": \"ehm-test.js\",\n\t\t\t\"global\": false,\n\t\t\t\"internal\": true,\n\t\t\t\"class\": true\n\t\t}\n\t@end-submodule-configuration\n\n\t@submodule-documentation:\n\t\tMeta class construct.\n\t@end-submodule-documentation\n\n\t@include:\n\t\t{\n\t\t\t\"harden\": \"harden\",\n\t\t\t\"sxty4\": \"sxty4\"\n\t\t}\n\t@end-include\n*/\n\nconst harden = require( \"harden\" );\nconst sxty4 = require( \"sxty4\" );\n\nconst NAME = Symbol( \"name\" );\nconst ENTITY = Symbol( \"entity\" );\nconst TYPE = Symbol( \"type\" );\n\nconst OBJECT = Symbol( \"object\" );\nconst BOOLEAN = Symbol( \"boolean\" );\nconst STRING = Symbol( \"string\" );\nconst NUMBER = Symbol( \"number\" );\nconst VALUE = Symbol( \"value\" );\n\nconst GARBAGE = Symbol( \"garbage\" );\nconst CORRUPTED = Symbol( \"corrupted\" );\nconst TAGGED = Symbol( \"tagged\" );\n\nconst CLASS_NAME_PATTERN = /^[A-Z][a-zA-Z0-9]+$/;\nconst FLOAT_NUMBER_PATTERN = /\\./;\nconst SYMBOL_PATTERN = /^Symbol\\((.*?)\\)$/;\nconst TAG_PATTERN = /^\\[([a-zA-Z][\\-a-zA-Z0-9]+)\\s+[A-Z][a-zA-Z0-9]+\\:?(.+?)?\\]$/;\n\nconst DEFAULT_DATA_URL_PREFIX = \"data:text/@type;base64,\";\n\nclass Meta {\n\tstatic [ Symbol.hasInstance ]( instance ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"instance:required\": \"*\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\treturn this.instanceOf( instance, this );\n\t}\n\n\tstatic instanceOf( instance, blueprint ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"instance:required\": \"*\",\n\t\t\t\t\t\"blueprint\": \"function\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tif(\n\t\t\ttypeof instance == \"object\"\n\t\t\t&& instance != null\n\t\t\t&& typeof blueprint == \"function\"\n\t\t\t&& instance.constructor.name === blueprint.name\n\t\t){\n\t\t\treturn true;\n\t\t}\n\n\t\t/*;\n\t\t\t@note:\n\t\t\t\tPossibility of instance being garbage.\n\t\t\t@end-note\n\t\t*/\n\t\tif( instance === GARBAGE ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( typeof blueprint != \"function\" ){\n\t\t\tblueprint = this;\n\t\t}\n\n\t\treturn ( new blueprint( GARBAGE ) )\n\t\t\t.__initialize__( instance, blueprint.name )\n\t\t\t.instanceOf( blueprint.name );\n\t}\n\n\tstatic create( blueprint, entity, state ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"blueprint:required\": \"function\",\n\t\t\t\t\t\"entity\": \"*\",\n\t\t\t\t\t\"state\": Array\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tif( arguments.length == 0 ){\n\t\t\tblueprint = this;\n\t\t\tentity = undefined;\n\t\t\tstate = [ ];\n\t\t}\n\n\t\tif( arguments.length == 1 ){\n\t\t\tblueprint = this;\n\t\t\tentity = arguments[ 0 ];\n\t\t\tstate = [ ];\n\t\t}\n\n\t\tif( arguments.length == 2 ){\n\t\t\tblueprint = arguments[ 0 ];\n\t\t\tentity = arguments[ 1 ];\n\t\t\tstate = [ ];\n\t\t}\n\n\t\tif( typeof blueprint != \"function\" ){\n\t\t\tblueprint = this;\n\t\t}\n\n\t\tif( typeof state == \"object\" ){\n\t\t\tstate = Array.from( state );\n\n\t\t}else{\n\t\t\tstate = [ ];\n\t\t}\n\n\t\tlet data = new blueprint( entity );\n\n\t\tif( TAG_PATTERN.test( data.stringify( ) ) ){\n\t\t\tstate.push( TAGGED );\n\t\t}\n\n\t\tlet index = state.length;\n\t\twhile( index-- ){\n\t\t\tlet status = state[ index ];\n\t\t\tharden( status, status, data );\n\t\t}\n\n\t\treturn Object.freeze( data );\n\t}\n\n\tstatic deserialize( data, parser, blueprint ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"data\": \"*\",\n\t\t\t\t\t\"parser\": \"function\",\n\t\t\t\t\t\"blueprint\": \"function\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tlet parameter = Array.from( arguments );\n\n\t\tif( arguments.length == 2 ){\n\t\t\tdata = this[ ENTITY ];\n\n\t\t\tparameter = [ undefined ].concat( parameter );\n\t\t}\n\n\t\tblueprint = parameter.splice( 1 )\n\t\t\t.filter( ( parameter ) => {\n\t\t\t\treturn (\n\t\t\t\t\ttypeof parameter == \"function\"\n\t\t\t\t\t&& \"name\" in parameter\n\t\t\t\t\t&& typeof parameter.name == \"string\"\n\t\t\t\t\t&& parameter.name != \"\"\n\t\t\t\t\t&& CLASS_NAME_PATTERN.test( parameter.name )\n\t\t\t\t);\n\t\t\t} )\n\t\t\t.concat( this )[ 0 ];\n\n\t\tvar [ parser, defer ] = parameter.splice( 1 )\n\t\t\t.filter( ( parameter ) => {\n\t\t\t\treturn (\n\t\t\t\t\ttypeof parameter == \"function\"\n\t\t\t\t\t&& (\n\t\t\t\t\t\t!( \"name\" in parameter )\n\t\t\t\t\t\t|| typeof parameter.name != \"string\"\n\t\t\t\t\t\t|| parameter.name == \"\"\n\t\t\t\t\t\t|| parameter.name == \"anonymous\"\n\t\t\t\t\t\t|| parameter.name == \"parser\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} )\n\t\t\t.concat( function parser( data ){\n\t\t\t\tif( typeof data == \"string\" ){\n\t\t\t\t\tlet token = data.match( TAG_PATTERN ) || [ ];\n\t\t\t\t\tlet type = token[ 1 ] || \"undefined\";\n\t\t\t\t\tlet value = token[ 2 ] || \"\";\n\n\t\t\t\t\tif( value == \"\" ){\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.replace( DEFAULT_DATA_URL_PREFIX.replace( \"@type\", type ), \"\" );\n\n\t\t\t\t\ttry{\n\t\t\t\t\t\tvalue = sxty4( value ).decode( );\n\n\t\t\t\t\t\tswitch( type ){\n\t\t\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\t\t\tif( value.toLowerCase( ) == \"true\" ){\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif( value.toLowerCase( ) == \"false\" ){\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\tlet method = ( new Function( \"return \" + value ) )( );\n\n\t\t\t\t\t\t\t\t\tif( typeof method != \"function\" ){\n\t\t\t\t\t\t\t\t\t\treturn function( ){ throw new Error( `no operation done, ${ value }` ); };\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn method;\n\n\t\t\t\t\t\t\t\t}catch( error ){\n\t\t\t\t\t\t\t\t\treturn function( ){ throw new Error( `no operation done, ${ error.stack }` ); };\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\tif( value == \"Infinity\" ){\n\t\t\t\t\t\t\t\t\t\treturn Infinity;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif( value == \"NaN\" ){\n\t\t\t\t\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif( FLOAT_NUMBER_PATTERN.test( value ) ){\n\t\t\t\t\t\t\t\t\t\treturn parseFloat( value );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif( !FLOAT_NUMBER_PATTERN.test( value ) ){\n\t\t\t\t\t\t\t\t\t\treturn parseInt( value );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn Infinity;\n\n\t\t\t\t\t\t\t\t}catch( error ){\n\t\t\t\t\t\t\t\t\treturn NaN;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\t\t\tif( value == \"null\" ){\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\t\treturn JSON.parse( value );\n\n\t\t\t\t\t\t\t\t}catch( error ){\n\t\t\t\t\t\t\t\t\treturn new Error( `cannot parse, ${ value }, ${ error.stack }` );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\t\t\treturn Symbol( ( value.match( SYMBOL_PATTERN ) || [ ] )[ 1 ] || \"\" );\n\n\t\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\t\treturn value;\n\n\t\t\t\t\t\t\tcase \"undefined\":\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn value;\n\n\t\t\t\t\t}catch( error ){\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t} );\n\n\t\ttry{\n\t\t\treturn Meta.create( blueprint, parser( data ) );\n\n\t\t}catch( error ){\n\t\t\treturn Meta.create( blueprint, defer( data ), [ CORRUPTED ] );\n\t\t}\n\t}\n\n\tconstructor( entity, name ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"entity:required\": \"*\",\n\t\t\t\t\t\"name:required\": \"string\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tthis.__initialize__( entity, name );\n\t}\n\n\t__initialize__( entity, name ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"entity:required\": \"*\",\n\t\t\t\t\t\"name:required\": \"string\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tlet type = typeof entity;\n\n\t\tname = name || type.replace( /^./, ( match ) => match.toUpperCase( ) );\n\n\t\tif( typeof name != \"string\" ){\n\t\t\tthrow new Error( \"invalid name\" );\n\t\t}\n\n\t\tthis[ TYPE ] = type;\n\t\tthis[ NAME ] = name;\n\t\tthis[ ENTITY ] = entity;\n\n\t\treturn this;\n\t}\n\n\t/*;\n\t\t@method-documentation:\n\t\t\tThis will only support three types; string, number, boolean.\n\n\t\t\tThese types are serializable.\n\t\t@end-method-documentation\n\n\t\t@note:\n\t\t\tDo not override this.\n\t\t@end-note\n\t*/\n\t[ Symbol.toPrimitive ]( type ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"type:required\": \"string\",\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tswitch( type ){\n\t\t\tcase \"string\":\n\t\t\t\treturn this.toString( );\n\n\t\t\tcase \"number\":\n\t\t\t\treturn this.toNumber( );\n\n\t\t\tdefault:\n\t\t\t\treturn this.toBoolean( );\n\t\t}\n\t}\n\n\t/*\n\t\t@note:\n\t\t\tThese methods should be overridden.\n\t\t@end-note\n\t*/\n\n\tget [ Symbol.toStringTag ]( ){\n\t\treturn this[ NAME ];\n\t}\n\n\tget [ OBJECT ]( ){\n\t\treturn { };\n\t}\n\n\tget [ BOOLEAN ]( ){\n\t\treturn true;\n\t}\n\n\tget [ STRING ]( ){\n\t\treturn Object.prototype.toString.call( this[ ENTITY ] );\n\t}\n\n\tget [ NUMBER ]( ){\n\t\treturn Infinity;\n\t}\n\n\tget [ VALUE ]( ){\n\t\treturn this[ ENTITY ];\n\t}\n\n\ttag( value ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"value\": \"string\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tif( typeof value != \"string\" ){\n\t\t\tvalue = \"\";\n\t\t}\n\n\t\tif( value != \"\" ){\n\t\t\tvalue = `:${ value }`;\n\t\t}\n\n\t\treturn `[${ this[ TYPE ] } ${ this[ NAME ] }:@value]`.replace( \":@value\", value );\n\t}\n\n\ttoJSON( ){\n\t\treturn this[ OBJECT ];\n\t}\n\n\t/*;\n\t\t@note:\n\t\t\tAs much as possible, do not override these methods.\n\t\t@end-note\n\t*/\n\n\ttoBoolean( ){\n\t\treturn this[ BOOLEAN ];\n\t}\n\n\ttoString( ){\n\t\treturn this[ STRING ];\n\t}\n\n\ttoNumber( ){\n\t\treturn this[ NUMBER ];\n\t}\n\n\tvalueOf( ){\n\t\treturn this[ VALUE ];\n\t}\n\n\ttypeOf( type ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"type:required\": \"string\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tif( typeof type == \"string\" ){\n\t\t\treturn typeof this[ ENTITY ] == type;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/*\n\t\t@note:\n\t\t\tSome cases that instanceOf needs to be overridden.\n\t\t@end-note\n\t*/\n\tinstanceOf( blueprint ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"blueprint:required\": [\n\t\t\t\t\t\t\"function\",\n\t\t\t\t\t\t\"string\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tif( typeof blueprint == \"function\" ){\n\t\t\treturn (\n\t\t\t\tthis instanceof blueprint\n\t\t\t\t|| this[ ENTITY ] instanceof blueprint\n\t\t\t);\n\t\t}\n\n\t\tif( typeof blueprint == \"string\" ){\n\t\t\tif( this.typeOf( blueprint.toLowerCase( ) ) ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet entity = this[ ENTITY ];\n\t\t\tif( entity === null || typeof entity == \"undefined\" ){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif( typeof entity == \"function\" && entity.name === blueprint ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\twhile( entity = Object.getPrototypeOf( entity ) ){\n\t\t\t\tif(\n\t\t\t\t\ttypeof entity.constructor == \"function\"\n\t\t\t\t\t&& entity.constructor.name === blueprint\n\t\t\t\t){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( this.constructor.name != blueprint ){\n\t\t\t\tlet entity = this;\n\t\t\t\twhile( entity = Object.getPrototypeOf( entity ) ){\n\t\t\t\t\tif(\n\t\t\t\t\t\ttypeof entity.constructor == \"function\"\n\t\t\t\t\t\t&& entity.constructor.name === blueprint\n\t\t\t\t\t){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/*;\n\t\t@note:\n\t\t\tThis is the generic stringify function,\n\t\t\t\tfor complex entity you need to override this.\n\t\t@end-note\n\t*/\n\tstringify( ){\n\t\ttry{\n\t\t\tif( this[ TYPE ] == \"object\" ){\n\t\t\t\treturn JSON.stringify( this[ ENTITY ] );\n\t\t\t}\n\n\t\t\treturn \"\" + this[ ENTITY ];\n\n\t\t}catch( error ){\n\t\t\ttry{\n\t\t\t\treturn this[ ENTITY ].toString( );\n\n\t\t\t}catch( error ){\n\t\t\t\treturn this.toString( );\n\t\t\t}\n\t\t}\n\t}\n\n\tdeserialize( data, parser, blueprint ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"data\": \"*\",\n\t\t\t\t\t\"parser\": \"function\",\n\t\t\t\t\t\"blueprint\": \"function\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tlet procedure = Meta.deserialize;\n\n\t\tif(\n\t\t\ttypeof this.constructor == \"function\"\n\t\t\t&& typeof this.constructor.deserialize == \"function\"\n\t\t\t&& this.constructor.deserialize.name === \"deserialize\"\n\t\t){\n\t\t\tprocedure = this.constructor.deserialize;\n\t\t}\n\n\t\tif( arguments.length == 2 ){\n\t\t\treturn procedure( this[ ENTITY ], arguments[ 0 ], arguments[ 1 ] );\n\n\t\t}else{\n\t\t\treturn procedure( data, parser, blueprint );\n\t\t}\n\t}\n\n\t/*;\n\t\t@method-documentation:\n\t\t\tReturns a tag format with value.\n\t\t\tThe value must be a data URL format.\n\n\t\t\tThe parser function will accept a context parameter.\n\n\t\t\tBy default this will serialize the entity using plain/text base64 data URL format.\n\n\t\t\tThe parser must return a serialize format of the data to be placed on the tag.\n\t\t@end-method-documentation\n\t*/\n\tserialize( parser ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"parser\": \"function\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\tlet defer = function parser( self ){\n\t\t\tlet value = sxty4( self.stringify( ) ).encode( );\n\n\t\t\treturn `${ DEFAULT_DATA_URL_PREFIX.replace( \"@type\", self[ TYPE ] ) }${ value }`;\n\t\t};\n\n\t\tif( typeof parser != \"function\" ){\n\t\t\tparser = defer;\n\t\t}\n\n\t\ttry{\n\t\t\treturn this.tag( parser( this ) );\n\n\t\t}catch( error ){\n\t\t\treturn this.tag( defer( this ) );\n\t\t}\n\t}\n\n\tisEqual( entity ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"entity:required\": \"*\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\treturn this[ ENTITY ] === entity;\n\t}\n\n\tisCorrupted( ){\n\t\treturn this[ CORRUPTED ] === CORRUPTED;\n\t}\n\n\tisTagged( ){\n\t\treturn (\n\t\t\tthis[ TAGGED ] === TAGGED\n\t\t\t|| TAG_PATTERN.test( this.stringify( ) )\n\t\t);\n\t}\n\n\tisRaw( ){\n\t\treturn !this.isTagged( );\n\t}\n\n\tisCompatible( tag ){\n\t\t/*;\n\t\t\t@meta-configuration:\n\t\t\t\t{\n\t\t\t\t\t\"tag\": \"string\"\n\t\t\t\t}\n\t\t\t@end-meta-configuration\n\t\t*/\n\n\t\treturn true;\n\t}\n}\n\nharden( \"NAME\", NAME, Meta );\nharden( \"ENTITY\", ENTITY, Meta );\nharden( \"TYPE\", TYPE, Meta );\n\nharden( \"OBJECT\", OBJECT, Meta );\nharden( \"BOOLEAN\", BOOLEAN, Meta );\nharden( \"STRING\", STRING, Meta );\nharden( \"NUMBER\", NUMBER, Meta );\nharden( \"VALUE\", VALUE, Meta );\n\nharden( \"GARBAGE\", GARBAGE, Meta );\nharden( \"CORRUPTED\", CORRUPTED, Meta );\nharden( \"TAGGED\", TAGGED, Meta );\n\nharden( \"TAG_PATTERN\", TAG_PATTERN, Meta );\n\nmodule.exports = Meta;\n"]}